FROM cpu_base

# build_code.sh
RUN rm -rf /etc/apt/sources.list.d/grafana.list && \
    apt update && \
    apt install -y rsync && \
    rm -rf /var/lib/apt/lists/*

RUN apt update && \
    apt install -y --no-install-recommends openssh-server expect telnet && \
    rm -rf /var/lib/apt/lists/*

RUN sed -i 's|^#*PasswordAuthentication.*|PasswordAuthentication yes|g'  /etc/ssh/sshd_config && \
    sed -i 's|^#*UsePAM.*|UsePAM no|g'  /etc/ssh/sshd_config && \
    sed -i 's|^#*PermitRootLogin.*|PermitRootLogin yes|g'  /etc/ssh/sshd_config && \
    sed -i 's|^#*Port.*|Port 36001|g'  /etc/ssh/sshd_config && \
    sed -i 's|^#* *StrictHostKeyChecking.*|StrictHostKeyChecking no|g' /etc/ssh/ssh_config && \
    sed -i 's|^#* *UserKnownHostsFile.*|SUserKnownHostsFile=/dev/null|g'  /etc/ssh/ssh_config

# hok_env
RUN curl -LO https://github.com/neovim/neovim/releases/latest/download/nvim.appimage && \
    chmod u+x nvim.appimage && \
    ./nvim.appimage --appimage-extract && \
    cp -r ./squashfs-root/usr/ / && \
    rm -r squashfs-root nvim.appimage && \
    ln -sf /usr/bin/nvim /usr/bin/vim

COPY ./rl_framework /rl_framework

RUN cd /rl_framework/common && python3 setup.py bdist_wheel && pip3 install --no-cache-dir dist/*.whl && python3 setup.py clean --all && rm -rf dist/
RUN cd /rl_framework/learner && python3 setup.py bdist_wheel && pip3 install --no-cache-dir dist/*.whl && python3 setup.py clean --all && rm -rf dist/
RUN cd /rl_framework/mem_pool && python3 setup.py bdist_wheel && pip3 install --no-cache-dir dist/*.whl && python3 setup.py clean --all && rm -rf dist/
RUN cd /rl_framework/model_pool && python3 setup.py bdist_wheel && pip3 install --no-cache-dir dist/*.whl && python3 setup.py clean --all && rm -rf dist/
RUN cd /rl_framework/predictor && python3 setup.py bdist_wheel && pip3 install --no-cache-dir dist/*.whl && python3 setup.py clean --all && rm -rf dist/

RUN pip3 install --no-cache-dir --upgrade build && \
    cd /rl_framework/monitor && python3 -m build && \
    pip3 install --no-cache-dir dist/*.whl && rm -rf dist/

# hok_env
COPY hok_env /root/hok_env
RUN cd /root/hok_env && python ./setup.py build && python ./setup.py install && cd /root && mv hok_env /.hok_env

# learner & actor
COPY aiarena/scripts /aiarena/scripts
COPY aiarena/3v3/learner /aiarena/code/learner
COPY aiarena/3v3/actor /aiarena/code/actor
COPY aiarena/battle /aiarena/battle

######################

# common
ENV CARD_NUM="1"
ENV CPU_NUM="1"
ENV TASK_ID="12345"
ENV TASK_UUID="123456789"
ENV gpu_num="1"
ENV USER=root
ENV AI_SERVER_IP="127.0.0.1"
######################

# dev
ENV USE_ZMQ_CURVE="1"
ENV KAIWU_DEV="1"
ENV SERVER_DRIVER_0="local_tar"
ENV SERVER_DRIVER_1="local_tar"
ENV MAX_EPISODE=1

# TODO deploy gamecore
ENV DEPLOY_GAMECORE=1
